// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.bzw.tars.server.tars.jfgame;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TClientParam {

	@TarsStructProperty(order = 0, isRequire = true)
	public String sAddr = "";
	@TarsStructProperty(order = 1, isRequire = true)
	public short nPort = (short)0;

	public String getSAddr() {
		return sAddr;
	}

	public void setSAddr(String sAddr) {
		this.sAddr = sAddr;
	}

	public short getNPort() {
		return nPort;
	}

	public void setNPort(short nPort) {
		this.nPort = nPort;
	}

	public TClientParam() {
	}

	public TClientParam(String sAddr, short nPort) {
		this.sAddr = sAddr;
		this.nPort = nPort;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(sAddr);
		result = prime * result + TarsUtil.hashCode(nPort);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TClientParam)) {
			return false;
		}
		TClientParam other = (TClientParam) obj;
		return (
			TarsUtil.equals(sAddr, other.sAddr) &&
			TarsUtil.equals(nPort, other.nPort) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(sAddr, 0);
		_os.write(nPort, 1);
	}


	public void readFrom(TarsInputStream _is) {
		this.sAddr = _is.readString(0, true);
		this.nPort = _is.read(nPort, 1, true);
	}

}
