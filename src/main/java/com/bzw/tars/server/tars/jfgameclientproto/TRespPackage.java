// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.bzw.tars.server.tars.jfgameclientproto;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TRespPackage {

	@TarsStructProperty(order = 0, isRequire = true)
	public java.util.List<java.lang.Short> vecMsgID = null;
	@TarsStructProperty(order = 1, isRequire = true)
	public java.util.List<byte[]> vecMsgData = null;

	public java.util.List<java.lang.Short> getVecMsgID() {
		return vecMsgID;
	}

	public void setVecMsgID(java.util.List<java.lang.Short> vecMsgID) {
		this.vecMsgID = vecMsgID;
	}

	public java.util.List<byte[]> getVecMsgData() {
		return vecMsgData;
	}

	public void setVecMsgData(java.util.List<byte[]> vecMsgData) {
		this.vecMsgData = vecMsgData;
	}

	public TRespPackage() {
	}

	public TRespPackage(java.util.List<java.lang.Short> vecMsgID, java.util.List<byte[]> vecMsgData) {
		this.vecMsgID = vecMsgID;
		this.vecMsgData = vecMsgData;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(vecMsgID);
		result = prime * result + TarsUtil.hashCode(vecMsgData);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TRespPackage)) {
			return false;
		}
		TRespPackage other = (TRespPackage) obj;
		return (
			TarsUtil.equals(vecMsgID, other.vecMsgID) &&
			TarsUtil.equals(vecMsgData, other.vecMsgData) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(vecMsgID, 0);
		_os.write(vecMsgData, 1);
	}

	static java.util.List<java.lang.Short> cache_vecMsgID;
	static { 
		cache_vecMsgID = new java.util.ArrayList<java.lang.Short>();
		short var_4 = (short)0;
		cache_vecMsgID.add(var_4);
	}
	static java.util.List<byte[]> cache_vecMsgData;
	static { 
		cache_vecMsgData = new java.util.ArrayList<byte[]>();
		byte[] var_5 = new byte[1];
		byte var_6 = (byte)0;
		var_5[0] = var_6;
		cache_vecMsgData.add(var_5);
	}

	public void readFrom(TarsInputStream _is) {
		this.vecMsgID = (java.util.List<java.lang.Short>) _is.read(cache_vecMsgID, 0, true);
		this.vecMsgData = (java.util.List<byte[]>) _is.read(cache_vecMsgData, 1, true);
	}

}
