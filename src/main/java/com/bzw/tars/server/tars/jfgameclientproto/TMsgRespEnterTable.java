// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.bzw.tars.server.tars.jfgameclientproto;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TMsgRespEnterTable {

	@TarsStructProperty(order = 0, isRequire = true)
	public long lMasterID = 0L;
	@TarsStructProperty(order = 1, isRequire = true)
	public java.util.List<TPlayerInfo> vecPlayerInfo = null;

	public long getLMasterID() {
		return lMasterID;
	}

	public void setLMasterID(long lMasterID) {
		this.lMasterID = lMasterID;
	}

	public java.util.List<TPlayerInfo> getVecPlayerInfo() {
		return vecPlayerInfo;
	}

	public void setVecPlayerInfo(java.util.List<TPlayerInfo> vecPlayerInfo) {
		this.vecPlayerInfo = vecPlayerInfo;
	}

	public TMsgRespEnterTable() {
	}

	public TMsgRespEnterTable(long lMasterID, java.util.List<TPlayerInfo> vecPlayerInfo) {
		this.lMasterID = lMasterID;
		this.vecPlayerInfo = vecPlayerInfo;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(lMasterID);
		result = prime * result + TarsUtil.hashCode(vecPlayerInfo);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TMsgRespEnterTable)) {
			return false;
		}
		TMsgRespEnterTable other = (TMsgRespEnterTable) obj;
		return (
			TarsUtil.equals(lMasterID, other.lMasterID) &&
			TarsUtil.equals(vecPlayerInfo, other.vecPlayerInfo) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(lMasterID, 0);
		_os.write(vecPlayerInfo, 1);
	}

	static java.util.List<TPlayerInfo> cache_vecPlayerInfo;
	static { 
		cache_vecPlayerInfo = new java.util.ArrayList<TPlayerInfo>();
		TPlayerInfo var_7 = new TPlayerInfo();
		cache_vecPlayerInfo.add(var_7);
	}

	public void readFrom(TarsInputStream _is) {
		this.lMasterID = _is.read(lMasterID, 0, true);
		this.vecPlayerInfo = (java.util.List<TPlayerInfo>) _is.read(cache_vecPlayerInfo, 1, true);
	}

}
