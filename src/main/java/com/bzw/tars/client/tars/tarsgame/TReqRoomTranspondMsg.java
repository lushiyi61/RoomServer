// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.bzw.tars.client.tars.tarsgame;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

/**
 * Room 封装后的用户消息
 */
@TarsStruct
public class TReqRoomTranspondMsg {

	@TarsStructProperty(order = 1, isRequire = true)
	public short nMsgID = (short)0;
	@TarsStructProperty(order = 2, isRequire = true)
	public String sTableNo = "";
	@TarsStructProperty(order = 3, isRequire = true)
	public short nChairIdx = (short)0;
	@TarsStructProperty(order = 4, isRequire = false)
	public byte[] vecData = null;

	public short getNMsgID() {
		return nMsgID;
	}

	public void setNMsgID(short nMsgID) {
		this.nMsgID = nMsgID;
	}

	public String getSTableNo() {
		return sTableNo;
	}

	public void setSTableNo(String sTableNo) {
		this.sTableNo = sTableNo;
	}

	public short getNChairIdx() {
		return nChairIdx;
	}

	public void setNChairIdx(short nChairIdx) {
		this.nChairIdx = nChairIdx;
	}

	public byte[] getVecData() {
		return vecData;
	}

	public void setVecData(byte[] vecData) {
		this.vecData = vecData;
	}

	public TReqRoomTranspondMsg() {
	}

	public TReqRoomTranspondMsg(short nMsgID, String sTableNo, short nChairIdx, byte[] vecData) {
		this.nMsgID = nMsgID;
		this.sTableNo = sTableNo;
		this.nChairIdx = nChairIdx;
		this.vecData = vecData;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(nMsgID);
		result = prime * result + TarsUtil.hashCode(sTableNo);
		result = prime * result + TarsUtil.hashCode(nChairIdx);
		result = prime * result + TarsUtil.hashCode(vecData);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TReqRoomTranspondMsg)) {
			return false;
		}
		TReqRoomTranspondMsg other = (TReqRoomTranspondMsg) obj;
		return (
			TarsUtil.equals(nMsgID, other.nMsgID) &&
			TarsUtil.equals(sTableNo, other.sTableNo) &&
			TarsUtil.equals(nChairIdx, other.nChairIdx) &&
			TarsUtil.equals(vecData, other.vecData) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(nMsgID, 1);
		_os.write(sTableNo, 2);
		_os.write(nChairIdx, 3);
		if (null != vecData) {
			_os.write(vecData, 4);
		}
	}

	static byte[] cache_vecData;
	static { 
		cache_vecData = new byte[1];
		byte var_12 = (byte)0;
		cache_vecData[0] = var_12;
	}

	public void readFrom(TarsInputStream _is) {
		this.nMsgID = _is.read(nMsgID, 1, true);
		this.sTableNo = _is.readString(2, true);
		this.nChairIdx = _is.read(nChairIdx, 3, true);
		this.vecData = (byte[]) _is.read(cache_vecData, 4, false);
	}

}
